[{"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\WeatherCard.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Daily.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Hourly.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Chart.js":"7"},{"size":278,"mtime":1607639771932,"results":"8","hashOfConfig":"9"},{"size":495,"mtime":1607635985846,"results":"10","hashOfConfig":"9"},{"size":4032,"mtime":1607887934483,"results":"11","hashOfConfig":"9"},{"size":3194,"mtime":1607887891809,"results":"12","hashOfConfig":"9"},{"size":3900,"mtime":1607887465885,"results":"13","hashOfConfig":"9"},{"size":4277,"mtime":1607820103197,"results":"14","hashOfConfig":"9"},{"size":1355,"mtime":1607817238590,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1846mn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js",[],["32","33"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js",["34","35","36","37"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\WeatherCard.js",["38","39"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Daily.js",["40","41","42"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Hourly.js",["43"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport { iconKey } from \"./WeatherCard\";\r\nimport { BiChevronsUp } from \"react-icons/bi\";\r\nimport \"./css/Hour.css\";\r\nconst Hourly = ({ details }) => {\r\n  const [hours, setHours] = useState([]);\r\n  console.log(details);\r\n\r\n  let createHourlyItems = () => {\r\n    return details.slice(0, 24).map((element) => {\r\n      let {\r\n        dt,\r\n        temp,\r\n        feels_like,\r\n        pressure,\r\n        humidity,\r\n        visibility,\r\n        wind_speed,\r\n        dew_point,\r\n        weather,\r\n      } = element;\r\n\r\n      return (\r\n        <HourlyItem\r\n          dt={dt}\r\n          temp={temp}\r\n          feels_like={feels_like}\r\n          pressure={pressure}\r\n          humidity={humidity}\r\n          visibility={visibility}\r\n          wind_speed={wind_speed}\r\n          dew_point={dew_point}\r\n          weather={weather}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHours(\r\n      details.slice(0, 24).map((element, index) => {\r\n        let date = new Date(element.dt * 1000);\r\n        let hour = date.getHours();\r\n\r\n        return {\r\n          name: `${\r\n            index === 0 ? \"\" : `${hour < 11 ? `0${hour} am` : `${hour} pm`}`\r\n          }`,\r\n          hour: hour,\r\n          temp: element.temp,\r\n          label: `${Math.round(element.temp)}`,\r\n        };\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Hourly forecast</h1>\r\n      <Chart data={hours} />\r\n      {createHourlyItems()}\r\n    </>\r\n  );\r\n};\r\nlet HourlyItem = ({\r\n  dt,\r\n  temp,\r\n  feels_like,\r\n  pressure,\r\n  humidity,\r\n  visibility,\r\n  wind_speed,\r\n  dew_point,\r\n  weather,\r\n}) => {\r\n  let [showDetails, setShowDetails] = useState(false);\r\n  let date = new Date(dt * 1000);\r\n  let strDate = date.toString().slice(0, 7).split(\" \");\r\n  let day = strDate[0];\r\n  let dayNumber = date.getUTCDate();\r\n  let { description } = weather[0];\r\n  let hour = date.getHours();\r\n  return (\r\n    <>\r\n      <div\r\n        className={`hourly-card-container ${description.replace(\" \", \"_\")}`}\r\n        onClick={() => {\r\n          setShowDetails(!showDetails);\r\n        }}\r\n      >\r\n        <div className=\"hourly-card-header\">\r\n          <div className=\"hourly-card-date-wrapper\">\r\n            <span>\r\n              {hour < 10 ? \"0\" + hour : hour} {hour < 12 ? \"am\" : \"pm\"} {day}{\" \"}\r\n              {dayNumber < 10 ? \"0\" + dayNumber : dayNumber}\r\n            </span>\r\n          </div>\r\n          <span>\r\n            {Math.round(temp) < 10 ? \"0\" + Math.round(temp) : Math.round(temp)}\r\n            °C\r\n          </span>\r\n          <i\r\n            className={`wu wu-${iconKey(description)} wu-64 wu-solid-white`}\r\n          ></i>\r\n          <div className=\"hourly-card-description-wrapper\">\r\n            <span>\r\n              {description.split(\" \")[0]}\r\n              <br />\r\n              {description.split(\" \")[1]}{\" \"}\r\n            </span>\r\n          </div>\r\n          <h3 className={`arrow-icon ${showDetails ? \"rotate-180\" : \"\"}`}>\r\n            <BiChevronsUp size={32} />\r\n          </h3>\r\n        </div>\r\n\r\n        <HourDetail\r\n          feels_like={feels_like}\r\n          pressure={pressure}\r\n          humidity={humidity}\r\n          visibility={visibility}\r\n          wind_speed={wind_speed}\r\n          dew_point={dew_point}\r\n          showDetails={showDetails}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HourDetail = ({\r\n  feels_like,\r\n  pressure,\r\n  humidity,\r\n  visibility,\r\n  wind_speed,\r\n  dew_point,\r\n  showDetails,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`hourly-card-details-item-content ${\r\n        showDetails ? \"hourly-show-details\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"panel left\">\r\n        <p>\r\n          Feels like: <span>{feels_like} °C</span>\r\n        </p>\r\n        <p>\r\n          Pressure: <span>{pressure} hPa</span>\r\n        </p>\r\n        <p>\r\n          humidity <span>{humidity} %</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"panel\">\r\n        <p>\r\n          Visibility: <span>{visibility / 1000} km</span>\r\n        </p>\r\n        <p>\r\n          Wind speed: <span>{wind_speed} km</span>\r\n        </p>\r\n        <p>\r\n          Dew point: <span>{dew_point} °C</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hourly;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\Chart.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":35,"column":11,"nodeType":"50","messageId":"51","endLine":35,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":71,"column":47,"nodeType":"54","messageId":"55","endLine":71,"endColumn":49},{"ruleId":"52","severity":1,"message":"53","line":77,"column":47,"nodeType":"54","messageId":"55","endLine":77,"endColumn":49},{"ruleId":"52","severity":1,"message":"53","line":83,"column":47,"nodeType":"54","messageId":"55","endLine":83,"endColumn":49},{"ruleId":"48","severity":1,"message":"56","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"57","line":1,"column":28,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"58","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"59","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":18},{"ruleId":"48","severity":1,"message":"60","line":74,"column":9,"nodeType":"50","messageId":"51","endLine":74,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":56,"column":6,"nodeType":"63","endLine":56,"endColumn":8,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'city' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useFetch' is defined but never used.","'itemContentReference' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array. If 'setHours' needs the current value of 'details', you can also switch to useReducer instead of useState and read 'details' in the reducer.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [details]",{"range":"70","text":"71"},[1388,1390],"[details]"]