[{"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\index.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\Home.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js":"18"},{"size":278,"mtime":1607639771932,"results":"19","hashOfConfig":"20"},{"size":1097,"mtime":1608613115050,"results":"21","hashOfConfig":"20"},{"size":36,"mtime":1608000817186,"results":"22","hashOfConfig":"20"},{"size":1545,"mtime":1608660459523,"results":"23","hashOfConfig":"20"},{"size":37,"mtime":1608001102454,"results":"24","hashOfConfig":"20"},{"size":4132,"mtime":1608699982725,"results":"25","hashOfConfig":"20"},{"size":4445,"mtime":1608690317256,"results":"26","hashOfConfig":"20"},{"size":5002,"mtime":1608691472440,"results":"27","hashOfConfig":"20"},{"size":3198,"mtime":1608001940760,"results":"28","hashOfConfig":"20"},{"size":51,"mtime":1608002318546,"results":"29","hashOfConfig":"20"},{"size":5504,"mtime":1608697894967,"results":"30","hashOfConfig":"20"},{"size":35,"mtime":1608009011990,"results":"31","hashOfConfig":"20"},{"size":4445,"mtime":1608611713623,"results":"32","hashOfConfig":"20"},{"size":39,"mtime":1608049236634,"results":"33","hashOfConfig":"20"},{"size":4965,"mtime":1608700179664,"results":"34","hashOfConfig":"20"},{"size":725,"mtime":1608323827420,"results":"35","hashOfConfig":"20"},{"size":36,"mtime":1608613084120,"results":"36","hashOfConfig":"20"},{"size":424,"mtime":1608613935666,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1846mn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js",[],["77","78"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js",["79","80","81"],"import React from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n} from \"recharts\";\r\nconst Chart = ({ data, screenWidth }) => {\r\n  const maxTemp = Math.max.apply(\r\n    Math,\r\n    data.map(function (element) {\r\n      return element.temp;\r\n    })\r\n  );\r\n  console.log(screenWidth);\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <ResponsiveContainer\r\n        width={\"100%\"}\r\n        height={screenWidth < 600 ? 125 : 200}\r\n      >\r\n        <AreaChart\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 20,\r\n            left: 20,\r\n            bottom: 0,\r\n          }}\r\n          isAnimationActive={false}\r\n        >\r\n          {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n          <XAxis dataKey=\"name\" style={{ fill: \"#fff\" }} />\r\n          {/* <YAxis\r\n            type=\"number\"\r\n            domain={[\"auto\", maxTemp + 2]}\r\n            style={{ fill: \"#fff\" }}\r\n          /> */}\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"temp\"\r\n            strokeWidth=\"4\"\r\n            stroke=\"rgb(255, 153, 85)\"\r\n            fill=\"rgb(255, 153, 85,0.431)\"\r\n            isAnimationActive={false}\r\n          >\r\n            <LabelList\r\n              dataKey=\"label\"\r\n              position=\"top\"\r\n              style={{ fill: \"#fff\" }}\r\n            ></LabelList>\r\n          </Area>\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js",["82","83"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js",["84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"../chart\";\r\nimport { iconKey } from \"../weathercard\";\r\nimport { BiChevronsUp } from \"react-icons/bi\";\r\nimport \"../../css/Hour.css\";\r\nconst Hourly = ({ details, timezone_offset, screenWidth }) => {\r\n  const [hours, setHours] = useState([]);\r\n  const [displayChart, setDisplayChart] = useState(true);\r\n  let createHourlyItems = () => {\r\n    console.log(\"Screen width\", screenWidth);\r\n    return details.slice(0, 24).map((element) => {\r\n      let {\r\n        dt,\r\n        temp,\r\n        feels_like,\r\n        pressure,\r\n        humidity,\r\n        visibility,\r\n        wind_speed,\r\n        dew_point,\r\n        weather,\r\n      } = element;\r\n      let time = dt + timezone_offset;\r\n      return (\r\n        <HourlyItem\r\n          dt={time}\r\n          temp={temp}\r\n          feels_like={feels_like}\r\n          pressure={pressure}\r\n          humidity={humidity}\r\n          visibility={visibility}\r\n          wind_speed={wind_speed}\r\n          dew_point={dew_point}\r\n          weather={weather}\r\n          screenWidth={screenWidth}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHours(\r\n      details.slice(0, 24).map((element, index) => {\r\n        let time = element.dt + timezone_offset;\r\n        let date = new Date(time * 1000);\r\n        let hour = date.getUTCHours();\r\n\r\n        return {\r\n          name: `${index === 0 ? \"\" : `${hour}`}`,\r\n          hour: hour,\r\n          temp: element.temp,\r\n          label: `${Math.round(element.temp)}`,\r\n        };\r\n      })\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    screenWidth < 600 ? setDisplayChart(false) : setDisplayChart(true);\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"hourly-header\">\r\n        <h1>Hourly forecast</h1>\r\n      </div>\r\n      {displayChart && (\r\n        <div className=\"chart-container\">\r\n          <Chart\r\n            data={hours}\r\n            timezone_offset={timezone_offset}\r\n            screenWidth={screenWidth}\r\n          />\r\n        </div>\r\n      )}\r\n      {createHourlyItems()}\r\n    </>\r\n  );\r\n};\r\nlet HourlyItem = ({\r\n  dt,\r\n  temp,\r\n  feels_like,\r\n  pressure,\r\n  humidity,\r\n  visibility,\r\n  wind_speed,\r\n  dew_point,\r\n  weather,\r\n  screenWidth,\r\n}) => {\r\n  let [showDetails, setShowDetails] = useState(false);\r\n  let date = new Date(dt * 1000);\r\n  let strDate = date.toString().slice(0, 7).split(\" \");\r\n  let day = strDate[0];\r\n  let dayNumber = date.getUTCDate();\r\n  let { description, main } = weather[0];\r\n  let hour = date.getUTCHours();\r\n  return (\r\n    <>\r\n      <div\r\n        className={`hourly-card-container ${main.toLowerCase()}`}\r\n        onClick={() => {\r\n          setShowDetails(!showDetails);\r\n        }}\r\n      >\r\n        <div className=\"hourly-card-header\">\r\n          <div className=\"hourly-card-date-wrapper\">\r\n            <span>\r\n              {hour < 10 ? \"0\" + hour : hour} {hour < 12 ? \"am\" : \"pm\"} {day}{\" \"}\r\n              {dayNumber < 10 ? \"0\" + dayNumber : dayNumber}\r\n            </span>\r\n          </div>\r\n          <span>\r\n            {Math.round(temp) < 10 ? \"0\" + Math.round(temp) : Math.round(temp)}\r\n            °C\r\n          </span>\r\n          <i\r\n            className={`wu wu-${\r\n              main === \"Clouds\"\r\n                ? iconKey(description)\r\n                : iconKey(main.toLowerCase())\r\n            } wu-${screenWidth < 600 ? \"32\" : \"64\"} wu-solid-white`}\r\n          ></i>\r\n          <div className=\"hourly-card-description-wrapper\">\r\n            <span>\r\n              {description.split(\" \")[0]}\r\n              <br />\r\n              {description.split(\" \")[1]}{\" \"}\r\n            </span>\r\n          </div>\r\n          <h3 className={`arrow-icon ${showDetails ? \"rotate-180\" : \"\"}`}>\r\n            <BiChevronsUp size={screenWidth < 600 ? 16 : 32} />\r\n          </h3>\r\n        </div>\r\n\r\n        <HourDetail\r\n          feels_like={feels_like}\r\n          pressure={pressure}\r\n          humidity={humidity}\r\n          visibility={visibility}\r\n          wind_speed={wind_speed}\r\n          dew_point={dew_point}\r\n          showDetails={showDetails}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HourDetail = ({\r\n  feels_like,\r\n  pressure,\r\n  humidity,\r\n  visibility,\r\n  wind_speed,\r\n  dew_point,\r\n  showDetails,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`hourly-card-details-item-content ${\r\n        showDetails ? \"hourly-show-details\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"panel left\">\r\n        <p>\r\n          Feels like: <span>{feels_like} °C</span>\r\n        </p>\r\n        <p>\r\n          Pressure: <span>{pressure} hPa</span>\r\n        </p>\r\n        <p>\r\n          humidity <span>{humidity} %</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"panel\">\r\n        <p>\r\n          Visibility: <span>{visibility / 1000} km</span>\r\n        </p>\r\n        <p>\r\n          Wind speed: <span>{wind_speed} km</span>\r\n        </p>\r\n        <p>\r\n          Dew point: <span>{dew_point} °C</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hourly;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js",["86","87"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js",["88"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\Home.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js",["89"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":6,"column":3,"nodeType":"96","messageId":"97","endLine":6,"endColumn":8},{"ruleId":"94","severity":1,"message":"98","line":7,"column":3,"nodeType":"96","messageId":"97","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"99","line":13,"column":9,"nodeType":"96","messageId":"97","endLine":13,"endColumn":16},{"ruleId":"94","severity":1,"message":"100","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":19},{"ruleId":"94","severity":1,"message":"101","line":12,"column":21,"nodeType":"96","messageId":"97","endLine":12,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":56,"column":6,"nodeType":"104","endLine":56,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":57,"column":3,"nodeType":"96","endLine":57,"endColumn":12,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"109","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"109","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"102","severity":1,"message":"110","line":71,"column":6,"nodeType":"104","endLine":71,"endColumn":16,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'YAxis' is defined but never used.","Identifier","unusedVar","'CartesianGrid' is defined but never used.","'maxTemp' is assigned a value but never used.","'showInput' is assigned a value but never used.","'setShowInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'details' and 'timezone_offset'. Either include them or remove the dependency array. If 'setHours' needs the current value of 'details', you can also switch to useReducer instead of useState and read 'details' in the reducer.","ArrayExpression",["114"],"React Hook useEffect contains a call to 'setDisplayChart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [screenWidth] as a second argument to the useEffect Hook.",["115"],"'Component' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'countryCode', 'history', 'latitude', and 'longitude'. Either include them or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [details, timezone_offset]",{"range":"123","text":"124"},"Add dependencies array: [screenWidth]",{"range":"125","text":"126"},"Update the dependencies array to be: [countryCode, history, latitude, location, longitude]",{"range":"127","text":"128"},[1565,1567],"[details, timezone_offset]",[1668,1668],", [screenWidth]",[2502,2512],"[countryCode, history, latitude, location, longitude]"]