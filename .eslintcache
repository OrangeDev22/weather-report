[{"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\utils\\tempUtils.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\index.js":"18","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\Main.js":"19","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\Home.js":"20","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\contexts\\AppProvider.js":"21","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\HourlyItem.js":"22","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\HourDetail.js":"23","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\DayItem.js":"24","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\DayDetails.js":"25"},{"size":278,"mtime":1607639771932,"results":"26","hashOfConfig":"27"},{"size":1439,"mtime":1612575605827,"results":"28","hashOfConfig":"27"},{"size":36,"mtime":1608000817186,"results":"29","hashOfConfig":"27"},{"size":1581,"mtime":1608935247739,"results":"30","hashOfConfig":"27"},{"size":37,"mtime":1608001102454,"results":"31","hashOfConfig":"27"},{"size":5158,"mtime":1612577963468,"results":"32","hashOfConfig":"27"},{"size":1265,"mtime":1612581373610,"results":"33","hashOfConfig":"27"},{"size":2445,"mtime":1612580890569,"results":"34","hashOfConfig":"27"},{"size":3198,"mtime":1608001940760,"results":"35","hashOfConfig":"27"},{"size":42,"mtime":1612578469667,"results":"36","hashOfConfig":"27"},{"size":4983,"mtime":1612578448283,"results":"37","hashOfConfig":"27"},{"size":39,"mtime":1608049236634,"results":"38","hashOfConfig":"27"},{"size":2158,"mtime":1612574214503,"results":"39","hashOfConfig":"27"},{"size":725,"mtime":1612574045218,"results":"40","hashOfConfig":"27"},{"size":36,"mtime":1608613084120,"results":"41","hashOfConfig":"27"},{"size":424,"mtime":1608613935666,"results":"42","hashOfConfig":"27"},{"size":137,"mtime":1608862181926,"results":"43","hashOfConfig":"27"},{"size":35,"mtime":1608873883022,"results":"44","hashOfConfig":"27"},{"size":3225,"mtime":1612578091226,"results":"45","hashOfConfig":"27"},{"size":1778,"mtime":1612574024241,"results":"46","hashOfConfig":"27"},{"size":1789,"mtime":1612578962010,"results":"47","hashOfConfig":"27"},{"size":2498,"mtime":1612580959403,"results":"48","hashOfConfig":"27"},{"size":1265,"mtime":1612580977586,"results":"49","hashOfConfig":"27"},{"size":2531,"mtime":1612581014321,"results":"50","hashOfConfig":"27"},{"size":2020,"mtime":1612580994801,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1846mn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js",[],["107","108"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js",["109","110","111"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js",["112"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"../chart\";\r\nimport HourlyItem from \"./HourlyItem\";\r\nimport \"../../css/Hour.css\";\r\nimport { ConvertTemperature } from \"../../utils/tempUtils\";\r\nimport { useApp } from \"../../contexts/AppProvider\";\r\n\r\nconst Hourly = ({ details, timezone_offset }) => {\r\n  const { unit, screenWidth } = useApp();\r\n  const [hours, setHours] = useState([]);\r\n  const [displayChart, setDisplayChart] = useState(true);\r\n  let newHours = [];\r\n  useEffect(() => {\r\n    details.slice(0, 24).forEach((element, index) => {\r\n      let time = element.dt + timezone_offset;\r\n      let date = new Date(time * 1000);\r\n      let hour = date.getUTCHours();\r\n      if (index % 2 !== 0) {\r\n        let newHour = {\r\n          name: `${\r\n            index === 0\r\n              ? \"\"\r\n              : `${hour < 10 ? \"0\" + hour + \":00\" : hour + \":00\"}`\r\n          }`,\r\n          hour: hour,\r\n          temp: ConvertTemperature(element.temp, unit),\r\n          label: `${Math.round(ConvertTemperature(element.temp, unit))}`,\r\n        };\r\n        newHours = [...newHours, newHour];\r\n      }\r\n    });\r\n    setHours(newHours);\r\n  }, [unit]);\r\n\r\n  useEffect(() => {\r\n    screenWidth < 600 ? setDisplayChart(false) : setDisplayChart(true);\r\n  }, [screenWidth]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hourly-header\">\r\n        <h1>Hourly forecast</h1>\r\n      </div>\r\n      {displayChart && (\r\n        <div className=\"chart-container\">\r\n          <Chart\r\n            data={hours}\r\n            timezone_offset={timezone_offset}\r\n            screenWidth={screenWidth}\r\n          />\r\n        </div>\r\n      )}\r\n      {details.slice(0, 24).map((element) => {\r\n        let {\r\n          dt,\r\n          temp,\r\n          feels_like,\r\n          pressure,\r\n          humidity,\r\n          visibility,\r\n          wind_speed,\r\n          dew_point,\r\n          weather,\r\n        } = element;\r\n        let time = dt + timezone_offset;\r\n        return (\r\n          <HourlyItem\r\n            dt={time}\r\n            temp={temp}\r\n            feels_like={feels_like}\r\n            pressure={pressure}\r\n            humidity={humidity}\r\n            visibility={visibility}\r\n            wind_speed={wind_speed}\r\n            dew_point={dew_point}\r\n            weather={weather}\r\n            unit={unit}\r\n            screenWidth={screenWidth}\r\n            key={dt}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hourly;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js",["113","114"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js",["115"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchLocation, fetchAllInOneCall } from \"../../useFetch\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport countryList from \"../../components/navbar/country_list.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Main from \"../../components/main\";\r\nconst API_KEY = process.env.REACT_APP_OW_RAWG_API_KEY;\r\n\r\nconst Location = ({ screenWidth, unit, setUnit }) => {\r\n  const history = useHistory();\r\n  const { location, latitude, longitude, countryCode } = useParams();\r\n  const [currentDetails, setCurrent] = useState([]);\r\n  const [locationDetails, setLocationDetails] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [countryName, setCountryName] = useState(\"\");\r\n\r\n  const oneCall = (latitude, longitude) => {\r\n    fetchAllInOneCall(API_KEY, latitude, longitude)\r\n      .then((data) => {\r\n        setLocationDetails(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (\r\n      location != null &&\r\n      latitude != null &&\r\n      longitude != null &&\r\n      countryCode != null\r\n    ) {\r\n      setCountryName(\r\n        countryList.find((country) => {\r\n          return country.country_code === countryCode;\r\n        }).name\r\n      );\r\n      fetchLocation(location, countryCode, API_KEY)\r\n        .then((data) => {\r\n          setCurrent(data);\r\n          if (latitude != null && longitude != null) {\r\n            oneCall(latitude, longitude);\r\n          } else {\r\n            oneCall(data.coord.lat, data.coord.lon);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      history.push(\"/*\");\r\n    }\r\n  }, [location, countryCode]);\r\n  if (loading) return <h4>Loading...</h4>;\r\n\r\n  return (\r\n    <Main\r\n      screenWidth={screenWidth}\r\n      unit={unit}\r\n      setUnit={setUnit}\r\n      location={location}\r\n      locationDetails={locationDetails}\r\n      currentDetails={currentDetails}\r\n      countryName={countryName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\utils\\tempUtils.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\Main.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\Home.js",["116"],"import React, { useState, useEffect } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { fetchLocation, fetchAllInOneCall } from \"../useFetch\";\r\nimport Main from \"../components/main\";\r\n\r\nconst API_KEY = process.env.REACT_APP_OW_RAWG_API_KEY;\r\nconst IP_API_KEY = process.env.REACT_APP_IP_RAW_API_KEY;\r\n\r\nconst Home = ({ screenWidth, unit, setUnit }) => {\r\n  const [details, setDetails] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [locationDetails, setLocationDetails] = useState([]);\r\n  const [currentDetails, setCurrent] = useState([]);\r\n\r\n  const url = `http://api.ipstack.com/check?access_key=${IP_API_KEY}&format=1`;\r\n\r\n  // const unit = \"celcius\";\r\n  const getClientDetails = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setDetails(data);\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClientDetails()\r\n      .then((data) => {\r\n        setDetails(data);\r\n        fetchLocation(data.city, data.country_code, API_KEY)\r\n          .then((data) => {\r\n            setCurrent(data);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        fetchAllInOneCall(API_KEY, data.latitude, data.longitude)\r\n          .then((data) => {\r\n            setLocationDetails(data);\r\n            setLoading(false);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <Main\r\n      screenWidth={screenWidth}\r\n      unit={unit}\r\n      setUnit={setUnit}\r\n      location={details.city}\r\n      locationDetails={locationDetails}\r\n      currentDetails={currentDetails}\r\n      countryName={details.country_name}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\contexts\\AppProvider.js",["117","118"],"import React, { useState, useContext, createContext, useEffect } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const useApp = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [unit, setUnit] = useState(\"celsius\");\r\n  const [location, setLocation] = useState(null);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  const checkWidth = () => {\r\n    setScreenWidth(window.innerWidth);\r\n  };\r\n\r\n  const ConvertTemperature = (temperature, unit) => {\r\n    return unit === \"celsius\" ? temperature : (9 * temperature) / 5 + 32;\r\n  };\r\n\r\n  const iconKey = (element) => {\r\n    switch (element) {\r\n      case \"clear\":\r\n        return \"clear\";\r\n      case \"few clouds\":\r\n        return \"mostlycloudy\";\r\n      case \"scattered clouds\":\r\n        return \"partlycloudy\";\r\n      case \"broken clouds\":\r\n        return \"cloudy\";\r\n      case \"overcast clouds\":\r\n        return \"cloudy\";\r\n      case \"rain\":\r\n        return \"rain\";\r\n      case \"drizzle\":\r\n        return \"flurries\";\r\n      case \"thunderstorm\":\r\n        return \"tstorms\";\r\n      case \"snow\":\r\n        return \"snow\";\r\n      case \"mist\":\r\n      case \"smoke\":\r\n      case \"haze\":\r\n      case \"dust\":\r\n      case \"fog\":\r\n      case \"sand\":\r\n      case \"ash\":\r\n      case \"squal\":\r\n      case \"tornado\":\r\n        return \"fog\";\r\n      default:\r\n        return \"unknown\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", checkWidth);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkWidth);\r\n    };\r\n  });\r\n\r\n  const value = {\r\n    unit,\r\n    setUnit,\r\n    iconKey,\r\n    screenWidth,\r\n    ConvertTemperature,\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\HourlyItem.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\HourDetail.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\DayItem.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\DayDetails.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":28},{"ruleId":"123","severity":1,"message":"128","line":9,"column":30,"nodeType":"125","messageId":"126","endLine":9,"endColumn":37},{"ruleId":"129","severity":1,"message":"130","line":29,"column":20,"nodeType":"131","endLine":29,"endColumn":42},{"ruleId":"123","severity":1,"message":"132","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"133","line":54,"column":6,"nodeType":"131","endLine":54,"endColumn":29,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":42,"column":6,"nodeType":"131","endLine":42,"endColumn":8,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"137","line":11,"column":10,"nodeType":"125","messageId":"126","endLine":11,"endColumn":18},{"ruleId":"123","severity":1,"message":"138","line":11,"column":20,"nodeType":"125","messageId":"126","endLine":11,"endColumn":31},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ConvertTemperature' is defined but never used.","'iconKey' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'newHours' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'latitude', and 'longitude'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'getClientDetails'. Either include it or remove the dependency array.",["142"],"'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [location, countryCode, latitude, longitude, history]",{"range":"147","text":"148"},"Update the dependencies array to be: [getClientDetails]",{"range":"149","text":"150"},[1799,1822],"[location, countryCode, latitude, longitude, history]",[1427,1429],"[getClientDetails]"]