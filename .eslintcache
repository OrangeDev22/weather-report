[{"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js":"1","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js":"2","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js":"3","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js":"4","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js":"5","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js":"6","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js":"7","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js":"8","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js":"9","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js":"10","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js":"11","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\index.js":"12","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\Home.js":"13","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js":"14","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js":"15","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js":"16","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js":"17","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js":"18","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\utils\\tempUtils.js":"19","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\index.js":"20","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\Main.js":"21"},{"size":278,"mtime":1607639771932,"results":"22","hashOfConfig":"23"},{"size":1301,"mtime":1608873062875,"results":"24","hashOfConfig":"23"},{"size":36,"mtime":1608000817186,"results":"25","hashOfConfig":"23"},{"size":1575,"mtime":1608926816409,"results":"26","hashOfConfig":"23"},{"size":37,"mtime":1608001102454,"results":"27","hashOfConfig":"23"},{"size":5078,"mtime":1608880008728,"results":"28","hashOfConfig":"23"},{"size":5364,"mtime":1608923624388,"results":"29","hashOfConfig":"23"},{"size":5544,"mtime":1608926805614,"results":"30","hashOfConfig":"23"},{"size":3198,"mtime":1608001940760,"results":"31","hashOfConfig":"23"},{"size":51,"mtime":1608002318546,"results":"32","hashOfConfig":"23"},{"size":5656,"mtime":1608857476753,"results":"33","hashOfConfig":"23"},{"size":35,"mtime":1608009011990,"results":"34","hashOfConfig":"23"},{"size":1868,"mtime":1608879969212,"results":"35","hashOfConfig":"23"},{"size":39,"mtime":1608049236634,"results":"36","hashOfConfig":"23"},{"size":2145,"mtime":1608879950475,"results":"37","hashOfConfig":"23"},{"size":725,"mtime":1608323827420,"results":"38","hashOfConfig":"23"},{"size":36,"mtime":1608613084120,"results":"39","hashOfConfig":"23"},{"size":424,"mtime":1608613935666,"results":"40","hashOfConfig":"23"},{"size":137,"mtime":1608862181926,"results":"41","hashOfConfig":"23"},{"size":35,"mtime":1608873883022,"results":"42","hashOfConfig":"23"},{"size":3341,"mtime":1608879985817,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1846mn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\index.js",[],["90","91"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\App.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\chart\\Chart.js",["92","93","94","95"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\daily\\Daily.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\hourly\\Hourly.js",["96","97"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weatherCard\\WeatherCard.js",["98","99"],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\weathercard\\WeatherCard.js",["100"],"import React, { useReducer, useState, useEffect } from \"react\";\r\nimport { WiHumidity, WiBarometer } from \"react-icons/wi\";\r\nimport { MdVisibility } from \"react-icons/md\";\r\nimport { ConvertTemperature } from \"../../utils/tempUtils\";\r\nconst WeatherCard = ({\r\n  city,\r\n  unit,\r\n  dt,\r\n  timezone_offset,\r\n  details,\r\n  country,\r\n  screenWidth,\r\n}) => {\r\n  // const convertTemperature = (temperature) => {\r\n  //   console.log(\"unit\", unit);\r\n  //   return unit === \"celsius\" ? temperature : (9 * temperature) / 5 + 32;\r\n  // };\r\n  const defaultState = {\r\n    cityName: \"\",\r\n    date: \"\",\r\n    hours: \"\",\r\n    minutes: \"\",\r\n    temp: 0,\r\n    pressure: 0,\r\n    humidity: 0,\r\n    visibility: 0,\r\n    description: \"\",\r\n    mainDescription: \"\",\r\n    country: \"\",\r\n  };\r\n  const { main, weather } = details;\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const getMonth = (month) => {\r\n    return months[parseInt(month)];\r\n  };\r\n  const reducer = (state, action) => {\r\n    let unix_timestamp = dt + timezone_offset;\r\n    let time = new Date(unix_timestamp * 1000);\r\n    if (action.type === \"SET_WEATHER_CARD\") {\r\n      return {\r\n        cityName: city,\r\n        day: time.getUTCDate(),\r\n        month: time.getUTCMonth(),\r\n        hour: time.getUTCHours(),\r\n        minutes: time.getUTCMinutes(),\r\n        temp: main.temp,\r\n        pressure: main.pressure,\r\n        humidity: main.humidity,\r\n        visibility: details.visibility,\r\n        description: weather[0].description,\r\n        mainDescription: weather[0].main,\r\n        country: country,\r\n      };\r\n    }\r\n\r\n    return state;\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"SET_WEATHER_CARD\" });\r\n  }, []);\r\n\r\n  let dayTime = () => {\r\n    return state.hour < 17 ? \"day\" : \"night\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"weather-card\">\r\n        <div\r\n          className={`weather-card-wrapper ${weather[0].main.toLowerCase()}`}\r\n        >\r\n          <div className=\"weather-card-title\">\r\n            <p>\r\n              {screenWidth < 600 ? \"\" : \"Weather at\"} {state.cityName}{\" \"}\r\n              {screenWidth < 600 ? \"\" : state.country}\r\n            </p>\r\n            <div className=\"time-wrapper\">\r\n              <p>\r\n                {`${getMonth(state.month)} `}\r\n                {`${state.day} `}\r\n                {state.hour < 12 ? \"0\" + state.hour : state.hour}:\r\n                {state.minutes < 10 ? \"0\" + state.minutes : state.minutes}{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-card-panel-wrapper\">\r\n            <div className=\"weather-card_panel\">\r\n              <div className=\"weather-card_panel main\">\r\n                <div\r\n                  className={`wu wu-${\r\n                    weather[0].main === \"Clouds\"\r\n                      ? iconKey(state.description)\r\n                      : iconKey(weather[0].main.toLowerCase())\r\n                  } wu-${\r\n                    screenWidth < 400 ? \"64\" : \"128\"\r\n                  } wu-solid-white wu-${dayTime()}`}\r\n                ></div>\r\n                <p className=\"temperature\">\r\n                  {Math.round(ConvertTemperature(state.temp, unit))}°{\"\"}\r\n                  {unit === \"celsius\" ? \"C\" : \"F\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"details-container\">\r\n                <div className=\"detail-wrapper\">\r\n                  <WiBarometer size={22} />\r\n                  <p>{state.pressure} hPa</p>\r\n                </div>\r\n                <div className=\"detail-wrapper\">\r\n                  <WiHumidity size={22} />\r\n                  <p>{state.humidity}%</p>\r\n                </div>\r\n                <div className=\"detail-wrapper\">\r\n                  <MdVisibility size={22} />\r\n                  <p>{state.visibility / 1000} km</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"description_container\">\r\n                {screenWidth < 600 || (\r\n                  <h4 className=\"weather_description\">\r\n                    {state.mainDescription}\r\n                  </h4>\r\n                )}\r\n                <p className=\"weather_description\">{state.description}</p>\r\n              </div>\r\n            </div>\r\n            {screenWidth < 600 || (\r\n              <section className=\"weather-card_panel-right details\">\r\n                <p className=\"details\">Pressure: {state.pressure} hPa</p>\r\n                <p className=\"details\">Humidity: {state.humidity}%</p>\r\n                <p className=\"details\">\r\n                  visibility: {state.visibility / 1000} km\r\n                </p>\r\n              </section>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport let iconKey = (element) => {\r\n  switch (element) {\r\n    case \"clear\":\r\n      return \"clear\";\r\n    case \"few clouds\":\r\n      return \"mostlycloudy\";\r\n    case \"scattered clouds\":\r\n      return \"partlycloudy\";\r\n    case \"broken clouds\":\r\n      return \"cloudy\";\r\n    case \"overcast clouds\":\r\n      return \"cloudy\";\r\n    case \"rain\":\r\n      return \"rain\";\r\n    case \"drizzle\":\r\n      return \"flurries\";\r\n    case \"thunderstorm\":\r\n      return \"tstorms\";\r\n    case \"snow\":\r\n      return \"snow\";\r\n    case \"mist\":\r\n    case \"smoke\":\r\n    case \"haze\":\r\n    case \"dust\":\r\n    case \"fog\":\r\n    case \"sand\":\r\n    case \"ash\":\r\n    case \"squal\":\r\n    case \"tornado\":\r\n      return \"fog\";\r\n    default:\r\n      return \"unknown\";\r\n  }\r\n};\r\nexport default WeatherCard;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\home\\Home.js",["101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { fetchLocation, fetchAllInOneCall } from \"../../useFetch\";\r\nimport Main from \"../../components/main\";\r\n\r\nconst Home = ({ screenWidth, unit, setUnit }) => {\r\n  const [details, setDetails] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [locationDetails, setLocationDetails] = useState([]);\r\n  const [currentDetails, setCurrent] = useState([]);\r\n  const key = \"05e47cb6f8fc8afa437fc32af1218b36\";\r\n\r\n  const url =\r\n    \"http://api.ipstack.com/check?access_key=d4d7e15716eb60585620301f3408eaa5&format=1\";\r\n\r\n  // const unit = \"celcius\";\r\n  const getClientDetails = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setDetails(data);\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClientDetails()\r\n      .then((data) => {\r\n        setDetails(data);\r\n        fetchLocation(data.city, data.country_code, key)\r\n          .then((data) => {\r\n            setCurrent(data);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        fetchAllInOneCall(key, data.latitude, data.longitude)\r\n          .then((data) => {\r\n            setLocationDetails(data);\r\n            setLoading(false);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  const handleChange = (newValue) => {\r\n    setSelectedTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Main\r\n      screenWidth={screenWidth}\r\n      unit={unit}\r\n      setUnit={setUnit}\r\n      location={details.city}\r\n      locationDetails={locationDetails}\r\n      currentDetails={currentDetails}\r\n      countryName={details.country_name}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\location\\Location.js",["103"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchLocation, fetchAllInOneCall } from \"../../useFetch\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport countryList from \"../../components/navbar/country_list.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Main from \"../../components/main\";\r\n\r\nconst Location = ({ screenWidth, unit, setUnit }) => {\r\n  const history = useHistory();\r\n  const { location, latitude, longitude, countryCode } = useParams();\r\n  const [currentDetails, setCurrent] = useState([]);\r\n  const [locationDetails, setLocationDetails] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [countryName, setCountryName] = useState(\"\");\r\n  const key = \"05e47cb6f8fc8afa437fc32af1218b36\";\r\n\r\n  const oneCall = (latitude, longitude) => {\r\n    fetchAllInOneCall(key, latitude, longitude)\r\n      .then((data) => {\r\n        setLocationDetails(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (\r\n      location != null &&\r\n      latitude != null &&\r\n      longitude != null &&\r\n      countryCode != null\r\n    ) {\r\n      setCountryName(\r\n        countryList.find((country) => {\r\n          return country.country_code === countryCode;\r\n        }).name\r\n      );\r\n      fetchLocation(location, countryCode, key)\r\n        .then((data) => {\r\n          setCurrent(data);\r\n          if (latitude != null && longitude != null) {\r\n            oneCall(latitude, longitude);\r\n          } else {\r\n            oneCall(data.coord.lat, data.coord.lon);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      history.push(\"/*\");\r\n    }\r\n  }, [location, countryCode]);\r\n  if (loading) return <h4>Loading...</h4>;\r\n\r\n  return (\r\n    <Main\r\n      screenWidth={screenWidth}\r\n      unit={unit}\r\n      setUnit={setUnit}\r\n      location={location}\r\n      locationDetails={locationDetails}\r\n      currentDetails={currentDetails}\r\n      countryName={countryName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\useFetch.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\pages\\error\\Error.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\utils\\tempUtils.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\index.js",[],"C:\\Users\\bh02\\Documents\\GitHub\\weather-report\\src\\components\\main\\Main.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":3,"nodeType":"110","messageId":"111","endLine":6,"endColumn":8},{"ruleId":"108","severity":1,"message":"112","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":26},{"ruleId":"108","severity":1,"message":"114","line":14,"column":9,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":58,"column":6,"nodeType":"117","endLine":58,"endColumn":12,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":59,"column":3,"nodeType":"110","endLine":59,"endColumn":12,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"122","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"122","line":1,"column":29,"nodeType":"110","messageId":"111","endLine":1,"endColumn":37},{"ruleId":"108","severity":1,"message":"123","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":21},{"ruleId":"108","severity":1,"message":"124","line":46,"column":9,"nodeType":"110","messageId":"111","endLine":46,"endColumn":21},{"ruleId":"115","severity":1,"message":"125","line":54,"column":6,"nodeType":"117","endLine":54,"endColumn":29,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'YAxis' is defined but never used.","Identifier","unusedVar","'CartesianGrid' is defined but never used.","'ConvertTemperature' is defined but never used.","'maxTemp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'details' and 'timezone_offset'. Either include them or remove the dependency array. If 'setHours' needs the current value of 'details', you can also switch to useReducer instead of useState and read 'details' in the reducer.","ArrayExpression",["129"],"React Hook useEffect contains a call to 'setDisplayChart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [screenWidth] as a second argument to the useEffect Hook.",["130"],"'Component' is defined but never used.","'useState' is defined but never used.","'selectedTab' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'latitude', and 'longitude'. Either include them or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [details, timezone_offset, unit]",{"range":"138","text":"139"},"Add dependencies array: [screenWidth]",{"range":"140","text":"141"},"Update the dependencies array to be: [location, countryCode, latitude, longitude, history]",{"range":"142","text":"143"},[1662,1668],"[details, timezone_offset, unit]",[1769,1769],", [screenWidth]",[1786,1809],"[location, countryCode, latitude, longitude, history]"]